<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Zlxt</title>
  
  
  <link href="http://example.com/atom.xml" rel="self"/>
  
  <link href="http://example.com/"/>
  <updated>2020-11-11T09:37:24.055Z</updated>
  <id>http://example.com/</id>
  
  <author>
    <name>Ming hongping</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title></title>
    <link href="http://example.com/2020/11/11/shell%E7%BC%96%E7%A8%8Bcase/"/>
    <id>http://example.com/2020/11/11/shell%E7%BC%96%E7%A8%8Bcase/</id>
    <published>2020-11-11T09:37:24.055Z</published>
    <updated>2020-11-11T09:37:24.055Z</updated>
    
    <content type="html"><![CDATA[<h1 id="case语句"><a href="#case语句" class="headerlink" title="case语句"></a>case语句</h1><ol><li>case语句为多重匹配语句</li><li>如果匹配成功，执行相匹配的命令</li></ol><h2 id="1-语法结构"><a href="#1-语法结构" class="headerlink" title="1. 语法结构"></a>1. 语法结构</h2><a id="more"></a><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">说明：pattern表示需要匹配的模式</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">case var <span class="keyword">in</span>             定义变量;var代表是变量名</span><br><span class="line">pattern <span class="number">1</span>)              模式<span class="number">1</span>;用 | 分割多个模式，相当于or</span><br><span class="line">    command1            需要执行的语句</span><br><span class="line">    ;;                  两个分号代表命令结束</span><br><span class="line">pattern <span class="number">2</span>)</span><br><span class="line">    command2</span><br><span class="line">    ;;</span><br><span class="line">pattern <span class="number">3</span>)</span><br><span class="line">    command3</span><br><span class="line">    ;;</span><br><span class="line">  *)              default，不满足以上模式，默认执行*)下面的语句</span><br><span class="line">    command4</span><br><span class="line">    ;;</span><br><span class="line">esacesac表示case语句结束</span><br></pre></td></tr></table></figure><h2 id="2-应用案例"><a href="#2-应用案例" class="headerlink" title="2. 应用案例"></a>2. 应用案例</h2><h3 id="㈠-脚本传不同值做不同事"><a href="#㈠-脚本传不同值做不同事" class="headerlink" title="㈠ 脚本传不同值做不同事"></a>㈠ 脚本传不同值做不同事</h3><p><strong>具体需求：</strong>当给程序传入start、stop、restart三个不同参数时分别执行相应命令</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#!/bin/env bash</span></span><br><span class="line">case <span class="variable">$1</span> <span class="keyword">in</span></span><br><span class="line">        <span class="built_in">start</span>|S)</span><br><span class="line">        service apache <span class="built_in">start</span> &amp;&gt;/dev/null &amp;&amp; <span class="built_in">echo</span> <span class="string">&quot;apache 启动成功&quot;</span></span><br><span class="line">        ;;</span><br><span class="line">        stop|T)</span><br><span class="line">        service apache stop &amp;&gt;/dev/null &amp;&amp; <span class="built_in">echo</span> <span class="string">&quot;apache 停止成功&quot;</span></span><br><span class="line">        ;;</span><br><span class="line">        restart|<span class="built_in">R</span>)</span><br><span class="line">        service apache restart &amp;&gt;/dev/null &amp;&amp; <span class="built_in">echo</span> <span class="string">&quot;apache 重启完毕&quot;</span></span><br><span class="line">        ;;</span><br><span class="line">        *)</span><br><span class="line">        <span class="built_in">echo</span> <span class="string">&quot;请输入要做的事情...&quot;</span></span><br><span class="line">        ;;</span><br><span class="line">esac</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="㈡-根据用户需求选择做事"><a href="#㈡-根据用户需求选择做事" class="headerlink" title="㈡ 根据用户需求选择做事"></a>㈡ 根据用户需求选择做事</h3><p><strong>具体需求：</strong></p><p>脚本提示让用户输入需要管理的服务名，然后提示用户需要对服务做什么操作，如启动，关闭等操作</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#!/bin/env bash</span></span><br><span class="line">read <span class="literal">-p</span> <span class="string">&quot;请输入你要管理的服务名称(vsftpd):&quot;</span> service</span><br><span class="line">case <span class="variable">$service</span> <span class="keyword">in</span></span><br><span class="line">        vsftpd|ftp)</span><br><span class="line">        read <span class="literal">-p</span> <span class="string">&quot;请选择你需要做的事情(restart|stop):&quot;</span> action</span><br><span class="line">        case <span class="variable">$action</span> <span class="keyword">in</span></span><br><span class="line">                stop|S)</span><br><span class="line">                service vsftpd stop &amp;&gt;/dev/null &amp;&amp; <span class="built_in">echo</span> <span class="string">&quot;该<span class="variable">$serivce</span>服务已经停止成功&quot;</span></span><br><span class="line">                ;;</span><br><span class="line">                <span class="built_in">start</span>)</span><br><span class="line">                service vsftpd <span class="built_in">start</span> &amp;&gt;/dev/null &amp;&amp; <span class="built_in">echo</span> <span class="string">&quot;该<span class="variable">$serivce</span>服务已经成功启动&quot;</span></span><br><span class="line">                ;;</span><br><span class="line">        esac</span><br><span class="line">        ;;</span><br><span class="line">        httpd|apache)</span><br><span class="line">        <span class="built_in">echo</span> <span class="string">&quot;apache hello world&quot;</span></span><br><span class="line">        ;;</span><br><span class="line">        *)</span><br><span class="line">        <span class="built_in">echo</span> <span class="string">&quot;请输入你要管理的服务名称(vsftpd)&quot;</span></span><br><span class="line">        ;;</span><br><span class="line">esac</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>###㈢ 菜单提示让用户选择需要做的事</p><p><strong>具体需求：</strong></p><p>模拟一个多任务维护界面;当执行程序时先显示总菜单，然后进行选择后做相应维护监控操作</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">**********请选择*********</span><br><span class="line"><span class="built_in">h</span>显示命令帮助</span><br><span class="line">f显示磁盘分区</span><br><span class="line">d显示磁盘挂载</span><br><span class="line">m查看内存使用</span><br><span class="line">u查看系统负载</span><br><span class="line">q退出程序</span><br><span class="line">*************************</span><br></pre></td></tr></table></figure><p><strong>思路：</strong></p><ol><li>菜单打印出来</li><li>交互式让用户输入操作编号，然后做出相应处理</li></ol><p><strong>落地实现：</strong></p><ol><li>菜单打印(分解动作)</li></ol><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#!/bin/env bash</span></span><br><span class="line"><span class="built_in">cat</span> &lt;&lt;<span class="literal">-EOF</span></span><br><span class="line"><span class="built_in">h</span>显示命令帮助</span><br><span class="line">f显示磁盘分区</span><br><span class="line">d显示磁盘挂载</span><br><span class="line">m查看内存使用</span><br><span class="line">u查看系统负载</span><br><span class="line">q退出程序</span><br><span class="line">EOF</span><br></pre></td></tr></table></figure><ol start="2"><li>最终实现</li></ol><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#!/bin/bash</span></span><br><span class="line"><span class="comment">#打印菜单</span></span><br><span class="line"><span class="built_in">cat</span> &lt;&lt;<span class="literal">-EOF</span></span><br><span class="line"><span class="built_in">h</span>显示命令帮助</span><br><span class="line">f显示磁盘分区</span><br><span class="line">d显示磁盘挂载</span><br><span class="line">m查看内存使用</span><br><span class="line">u查看系统负载</span><br><span class="line">q退出程序</span><br><span class="line">EOF</span><br><span class="line"></span><br><span class="line"><span class="comment">#让用户输入需要的操作</span></span><br><span class="line"><span class="keyword">while</span> true</span><br><span class="line"><span class="keyword">do</span></span><br><span class="line">read <span class="literal">-p</span> <span class="string">&quot;请输入需要操作的选项[f|d]:&quot;</span> var1</span><br><span class="line">case <span class="variable">$var1</span> <span class="keyword">in</span></span><br><span class="line"><span class="built_in">h</span>)</span><br><span class="line"><span class="built_in">cat</span> &lt;&lt;<span class="literal">-EOF</span></span><br><span class="line">        <span class="built_in">h</span>       显示命令帮助</span><br><span class="line">        f       显示磁盘分区</span><br><span class="line">        d       显示磁盘挂载</span><br><span class="line">        m       查看内存使用</span><br><span class="line">        u       查看系统负载</span><br><span class="line">        q       退出程序</span><br><span class="line">EOF</span><br><span class="line">;;</span><br><span class="line">f)</span><br><span class="line">fdisk <span class="literal">-l</span></span><br><span class="line">;;</span><br><span class="line">d)</span><br><span class="line">df <span class="literal">-h</span></span><br><span class="line">;;</span><br><span class="line">m)</span><br><span class="line">free <span class="literal">-m</span></span><br><span class="line">;;</span><br><span class="line">u)</span><br><span class="line">uptime</span><br><span class="line">;;</span><br><span class="line">q)</span><br><span class="line"><span class="keyword">exit</span></span><br><span class="line">;;</span><br><span class="line">esac</span><br><span class="line">done</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">#!/bin/bash</span></span><br><span class="line"><span class="comment">#打印菜单</span></span><br><span class="line">menu()&#123;</span><br><span class="line"><span class="built_in">cat</span> &lt;&lt;<span class="literal">-END</span></span><br><span class="line"><span class="built_in">h</span>显示命令帮助</span><br><span class="line">f显示磁盘分区</span><br><span class="line">d显示磁盘挂载</span><br><span class="line">m查看内存使用</span><br><span class="line">u查看系统负载</span><br><span class="line">q退出程序</span><br><span class="line"><span class="keyword">END</span></span><br><span class="line">&#125;</span><br><span class="line">menu</span><br><span class="line"><span class="keyword">while</span> true</span><br><span class="line"><span class="keyword">do</span></span><br><span class="line">read <span class="literal">-p</span> <span class="string">&quot;请输入你的操作[h for help]:&quot;</span> var1</span><br><span class="line">case <span class="variable">$var1</span> <span class="keyword">in</span></span><br><span class="line"><span class="built_in">h</span>)</span><br><span class="line">menu</span><br><span class="line">;;</span><br><span class="line">f)</span><br><span class="line">read <span class="literal">-p</span> <span class="string">&quot;请输入你要查看的设备名字[/dev/sdb]:&quot;</span> var2</span><br><span class="line">case <span class="variable">$var2</span> <span class="keyword">in</span></span><br><span class="line">/dev/sda)</span><br><span class="line">fdisk <span class="literal">-l</span> /dev/sda</span><br><span class="line">;;</span><br><span class="line">/dev/sdb)</span><br><span class="line">fdisk <span class="literal">-l</span> /dev/sdb</span><br><span class="line">;;</span><br><span class="line">esac</span><br><span class="line">;;</span><br><span class="line">d)</span><br><span class="line">lsblk</span><br><span class="line">;;</span><br><span class="line">m)</span><br><span class="line">free <span class="literal">-m</span></span><br><span class="line">;;</span><br><span class="line">u)</span><br><span class="line">uptime</span><br><span class="line">;;</span><br><span class="line">q)</span><br><span class="line"><span class="keyword">exit</span></span><br><span class="line">;;</span><br><span class="line">esac</span><br><span class="line">done</span><br><span class="line"></span><br></pre></td></tr></table></figure><p><strong>课堂练习：</strong></p><ol><li>输入一个等级（A-E），查看每个等级的成绩；如：输入A，则显示“90分~100分”，依次类推</li><li>判断用户输入的字符串，如果是”hello”,则显示”world”；如果是”world”,则显示”hello”,否则提示”请输入hello或者world，谢谢！”</li></ol><h1 id="二、-函数"><a href="#二、-函数" class="headerlink" title="二、==函数=="></a>二、==函数==</h1><h2 id="1-什么是函数？"><a href="#1-什么是函数？" class="headerlink" title="1. 什么是函数？"></a>1. 什么是函数？</h2><ul><li>shell中允许将<strong>一组命令集合</strong>或<strong>语句</strong>形成一段<strong>可用代码</strong>，这些代码块称为shell函数</li><li>给这段代码起个名字称为函数名，后续可以直接调用该段代码的功能</li></ul><h2 id="2-如何定义函数？"><a href="#2-如何定义函数？" class="headerlink" title="2. 如何定义函数？"></a>2. 如何定义函数？</h2><p><strong>方法1：</strong></p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">函数名()</span><br><span class="line">&#123;</span><br><span class="line">  函数体（一堆命令的集合，来实现某个功能）   </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>方法2：</strong></p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> 函数名<span class="params">()</span></span></span><br><span class="line">&#123;</span><br><span class="line">   函数体（一堆命令的集合，来实现某个功能）</span><br><span class="line">   <span class="built_in">echo</span> hello</span><br><span class="line">   <span class="built_in">echo</span> world</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p><strong>函数中==return==说明:</strong></p><ol><li>return可以==结束一个函数==。类似于循环控制语句break(结束当前循环，执行循环体后面的代码)。</li><li>return默认返回函数中最后一个命令状态值，也可以给定参数值，范围是0-256之间。</li><li>如果没有return命令，函数将返回最后一个指令的退出状态值。</li></ol><p>##3. 函数如何调用？</p><h3 id="㈠-当前命令行调用"><a href="#㈠-当前命令行调用" class="headerlink" title="㈠ 当前命令行调用"></a>㈠ 当前命令行调用</h3><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">[<span class="type">root</span>@<span class="type">MissHou</span> <span class="type">shell04</span>]<span class="comment"># cat fun1.sh </span></span><br><span class="line"><span class="comment">#!/bin/bash</span></span><br><span class="line">hello()&#123;</span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;hello lilei <span class="variable">$1</span>&quot;</span></span><br><span class="line">hostname</span><br><span class="line">&#125;</span><br><span class="line">menu()&#123;</span><br><span class="line"><span class="built_in">cat</span> &lt;&lt;<span class="literal">-EOF</span></span><br><span class="line"><span class="number">1</span>. mysql</span><br><span class="line"><span class="number">2</span>. web</span><br><span class="line"><span class="number">3</span>. app</span><br><span class="line"><span class="number">4</span>. <span class="keyword">exit</span></span><br><span class="line">EOF</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">[<span class="type">root</span>@<span class="type">MissHou</span> <span class="type">shell04</span>]<span class="comment"># source fun1.sh </span></span><br><span class="line">[<span class="type">root</span>@<span class="type">MissHou</span> <span class="type">shell04</span>]<span class="comment"># . fun1.sh </span></span><br><span class="line"></span><br><span class="line">[<span class="type">root</span>@<span class="type">MissHou</span> <span class="type">shell04</span>]<span class="comment"># hello 888</span></span><br><span class="line">hello lilei <span class="number">888</span></span><br><span class="line">MissHou.itcast.cc</span><br><span class="line">[<span class="type">root</span>@<span class="type">MissHou</span> <span class="type">shell04</span>]<span class="comment"># menu</span></span><br><span class="line"><span class="number">1</span>. mysql</span><br><span class="line"><span class="number">2</span>. web</span><br><span class="line"><span class="number">3</span>. app</span><br><span class="line"><span class="number">4</span>. <span class="keyword">exit</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="㈡-定义到用户的环境变量中"><a href="#㈡-定义到用户的环境变量中" class="headerlink" title="㈡ 定义到用户的环境变量中"></a>㈡ 定义到用户的环境变量中</h3><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">[<span class="type">root</span>@<span class="type">MissHou</span> <span class="type">shell05</span>]<span class="comment"># vim ~/.bashrc </span></span><br><span class="line">文件中增加如下内容：</span><br><span class="line">hello()&#123;</span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;hello lilei <span class="variable">$1</span>&quot;</span></span><br><span class="line">hostname</span><br><span class="line">&#125;</span><br><span class="line">menu()&#123;</span><br><span class="line"><span class="built_in">cat</span> &lt;&lt;<span class="literal">-EOF</span></span><br><span class="line"><span class="number">1</span>. mysql</span><br><span class="line"><span class="number">2</span>. web</span><br><span class="line"><span class="number">3</span>. app</span><br><span class="line"><span class="number">4</span>. <span class="keyword">exit</span></span><br><span class="line">EOF</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">注意：</span><br><span class="line">当用户打开bash的时候会读取该文件</span><br></pre></td></tr></table></figure><h3 id="㈢-脚本中调用"><a href="#㈢-脚本中调用" class="headerlink" title="㈢ 脚本中调用"></a>㈢ 脚本中调用</h3><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#!/bin/bash</span></span><br><span class="line"><span class="comment">#打印菜单</span></span><br><span class="line">source ./fun1.sh</span><br><span class="line">menu()&#123;</span><br><span class="line"><span class="built_in">cat</span> &lt;&lt;<span class="literal">-END</span></span><br><span class="line"><span class="built_in">h</span>显示命令帮助</span><br><span class="line">f显示磁盘分区</span><br><span class="line">d显示磁盘挂载</span><br><span class="line">m查看内存使用</span><br><span class="line">u查看系统负载</span><br><span class="line">q退出程序</span><br><span class="line"><span class="keyword">END</span></span><br><span class="line">&#125;</span><br><span class="line">menu//调用函数</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>##4. 应用案例</p><p><strong>具体需求：</strong></p><ol><li>写一个脚本==收集用户输入==的基本信息(姓名，性别，年龄)，如不输入==一直提示输入==</li><li>最后根据用户的信息输出相对应的内容</li></ol><p><strong>思路：</strong></p><ol><li><p>==交互式==定义多个变量来保存用户信息  姓名、性别、年龄</p></li><li><p>如果不输一直提示输入</p><ul><li>==循环==直到输入字符串不为空  while  判断输入字符串是否为空</li><li>每个信息都必须不能为空，该功能可以定义为一个函数，方便下面脚本调用</li></ul></li><li><p>根据用户输入信息做出匹配判断</p></li></ol><p><strong>代码实现：</strong></p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#!/bin/bash</span></span><br><span class="line"><span class="comment">#该函数实现用户如果不输入内容则一直循环直到用户输入为止，并且将用户输入的内容打印出来</span></span><br><span class="line">input_fun()</span><br><span class="line">&#123;</span><br><span class="line">  input_var=<span class="string">&quot;&quot;</span></span><br><span class="line">  output_var=<span class="variable">$1</span></span><br><span class="line">  <span class="keyword">while</span> [ -<span class="type">z</span> <span class="variable">$input_var</span> ]</span><br><span class="line"><span class="keyword">do</span></span><br><span class="line">read <span class="literal">-p</span> <span class="string">&quot;<span class="variable">$output_var</span>&quot;</span> input_var</span><br><span class="line">done</span><br><span class="line"><span class="built_in">echo</span> <span class="variable">$input_var</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">input_fun 请输入你的姓名:</span><br><span class="line"></span><br><span class="line">或者</span><br><span class="line"><span class="comment">#!/bin/bash</span></span><br><span class="line">fun()</span><br><span class="line">&#123;</span><br><span class="line">read <span class="literal">-p</span> <span class="string">&quot;<span class="variable">$1</span>&quot;</span> var</span><br><span class="line"><span class="keyword">if</span> [ -<span class="type">z</span> <span class="variable">$var</span> ];then</span><br><span class="line">fun <span class="variable">$1</span></span><br><span class="line"><span class="keyword">else</span></span><br><span class="line"><span class="built_in">echo</span> <span class="variable">$var</span></span><br><span class="line">fi</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">#调用函数并且获取用户的姓名、性别、年龄分别赋值给name、sex、age变量</span></span><br><span class="line">name=<span class="variable">$</span>(input_fun 请输入你的姓名:)</span><br><span class="line">sex=<span class="variable">$</span>(input_fun 请输入你的性别:)</span><br><span class="line">age=<span class="variable">$</span>(input_fun 请输入你的年龄:)</span><br><span class="line"></span><br><span class="line"><span class="comment">#根据用户输入的性别进行匹配判断</span></span><br><span class="line">case <span class="variable">$sex</span> <span class="keyword">in</span></span><br><span class="line"><span class="built_in">man</span>)</span><br><span class="line"><span class="keyword">if</span> [ <span class="variable">$age</span> -<span class="type">gt</span> <span class="number">18</span> -<span class="type">a</span> <span class="variable">$age</span> -<span class="type">le</span> <span class="number">35</span> ];then</span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;中年大叔你油腻了吗？加油&quot;</span></span><br><span class="line">elif [ <span class="variable">$age</span> -<span class="type">gt</span> <span class="number">35</span> ];then</span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;保温杯里泡枸杞&quot;</span></span><br><span class="line"><span class="keyword">else</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;年轻有为。。。&quot;</span></span><br><span class="line">fi</span><br><span class="line">;;</span><br><span class="line">woman)</span><br><span class="line">xxx</span><br><span class="line">;;</span><br><span class="line">*)</span><br><span class="line">xxx</span><br><span class="line">;;</span><br><span class="line">esac</span><br><span class="line"></span><br></pre></td></tr></table></figure><p><strong>扩展延伸：</strong></p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">描述以下代码含义：</span><br><span class="line">:()</span><br><span class="line">&#123;</span><br><span class="line">   :|:&amp;</span><br><span class="line">&#125;</span><br><span class="line">:</span><br></pre></td></tr></table></figure><p>#三、综合案例</p><h2 id="1-任务背景"><a href="#1-任务背景" class="headerlink" title="1. 任务背景"></a>1. 任务背景</h2><p>现有的跳板机虽然实现了统一入口来访问生产服务器，yunwei用户权限太大可以操作跳板机上的所有目录文件，存在数据被误删的安全隐患，所以希望你做一些安全策略来保证跳板机的正常使用。</p><h2 id="2-具体要求"><a href="#2-具体要求" class="headerlink" title="2. 具体要求"></a>2. 具体要求</h2><ol><li>只允许yunwei用户通过跳板机远程连接后台的应用服务器做一些维护操作</li><li>公司运维人员远程通过yunwei用户连接跳板机时，跳出以下菜单供选择：</li></ol><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">欢迎使用Jumper<span class="literal">-server</span>，请选择你要操作的主机：</span><br><span class="line"><span class="number">1</span>. DB1<span class="literal">-Master</span></span><br><span class="line"><span class="number">2</span>. DB2<span class="literal">-Slave</span></span><br><span class="line"><span class="number">3</span>. Web1</span><br><span class="line"><span class="number">4</span>. Web2</span><br><span class="line"><span class="built_in">h</span>. help</span><br><span class="line">q. <span class="keyword">exit</span></span><br></pre></td></tr></table></figure><ol start="3"><li>当用户选择相应主机后，直接<strong>免密码登录</strong>成功</li><li>如果用户不输入一直提示用户输入，直到用户选择退出</li></ol><h2 id="3-综合分析"><a href="#3-综合分析" class="headerlink" title="3. 综合分析"></a>3. 综合分析</h2><ol><li>将脚本放到yunwei用户家目录里的.bashrc文件里（/shell05/jumper-server.sh）</li><li>将菜单定义为一个函数[打印菜单]，方便后面调用</li><li>用case语句来实现用户的选择【交互式定义变量】</li><li>当用户选择了某一台服务器后，进一步询问用户需要做的事情  case…esac  交互式定义变量</li><li>使用循环来实现用户不选择一直让其选择</li><li>限制用户退出后直接关闭终端  exit </li></ol><h2 id="4-落地实现"><a href="#4-落地实现" class="headerlink" title="4. 落地实现"></a>4. 落地实现</h2><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#!/bin/bash</span></span><br><span class="line"><span class="comment"># jumper-server</span></span><br><span class="line"><span class="comment"># 定义菜单打印功能的函数</span></span><br><span class="line">menu()</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">cat</span> &lt;&lt;<span class="literal">-EOF</span></span><br><span class="line">欢迎使用Jumper<span class="literal">-server</span>，请选择你要操作的主机：</span><br><span class="line"><span class="number">1</span>. DB1<span class="literal">-Master</span></span><br><span class="line"><span class="number">2</span>. DB2<span class="literal">-Slave</span></span><br><span class="line"><span class="number">3</span>. Web1</span><br><span class="line"><span class="number">4</span>. Web2</span><br><span class="line"><span class="built_in">h</span>. help</span><br><span class="line">q. <span class="keyword">exit</span></span><br><span class="line">EOF</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment"># 屏蔽以下信号</span></span><br><span class="line"><span class="keyword">trap</span> <span class="string">&#x27;&#x27;</span> <span class="number">1</span> <span class="number">2</span> <span class="number">3</span> <span class="number">19</span></span><br><span class="line"><span class="comment"># 调用函数来打印菜单</span></span><br><span class="line">menu</span><br><span class="line"><span class="comment">#循环等待用户选择</span></span><br><span class="line"><span class="keyword">while</span> true</span><br><span class="line"><span class="keyword">do</span></span><br><span class="line"><span class="comment"># 菜单选择，case...esac语句</span></span><br><span class="line">read <span class="literal">-p</span> <span class="string">&quot;请选择你要访问的主机:&quot;</span> host</span><br><span class="line">case <span class="variable">$host</span> <span class="keyword">in</span></span><br><span class="line"><span class="number">1</span>)</span><br><span class="line">ssh root@<span class="number">10.1</span>.<span class="number">1.1</span></span><br><span class="line">;;</span><br><span class="line"><span class="number">2</span>)</span><br><span class="line">ssh root@<span class="number">10.1</span>.<span class="number">1.2</span></span><br><span class="line">;;</span><br><span class="line"><span class="number">3</span>)</span><br><span class="line">ssh root@<span class="number">10.1</span>.<span class="number">1.3</span></span><br><span class="line">;;</span><br><span class="line"><span class="built_in">h</span>)</span><br><span class="line"><span class="built_in">clear</span>;menu</span><br><span class="line">;;</span><br><span class="line">q)</span><br><span class="line"><span class="keyword">exit</span></span><br><span class="line">;;</span><br><span class="line">esac</span><br><span class="line">done</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">将脚本放到yunwei用户家目录里的.bashrc里执行：</span><br><span class="line">bash ~/jumper<span class="literal">-server</span>.sh</span><br><span class="line"><span class="keyword">exit</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><p><strong>进一步完善需求</strong></p><p>为了进一步增强跳板机的安全性，工作人员通过跳板机访问生产环境，但是不能在跳板机上停留。</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#!/bin/bash</span></span><br><span class="line"><span class="comment">#公钥推送成功</span></span><br><span class="line"><span class="keyword">trap</span> <span class="string">&#x27;&#x27;</span> <span class="number">1</span> <span class="number">2</span> <span class="number">3</span> <span class="number">19</span></span><br><span class="line"><span class="comment">#打印菜单用户选择</span></span><br><span class="line">menu()&#123;</span><br><span class="line"><span class="built_in">cat</span> &lt;&lt;<span class="literal">-EOF</span></span><br><span class="line">欢迎使用Jumper<span class="literal">-server</span>，请选择你要操作的主机：</span><br><span class="line"><span class="number">1</span>. DB1<span class="literal">-Master</span></span><br><span class="line"><span class="number">2</span>. DB2<span class="literal">-Slave</span></span><br><span class="line"><span class="number">3</span>. Web1</span><br><span class="line"><span class="number">4</span>. Web2</span><br><span class="line"><span class="built_in">h</span>. help</span><br><span class="line">q. <span class="keyword">exit</span></span><br><span class="line">EOF</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">#调用函数来打印菜单</span></span><br><span class="line">menu</span><br><span class="line"><span class="keyword">while</span> true</span><br><span class="line"><span class="keyword">do</span></span><br><span class="line">read <span class="literal">-p</span> <span class="string">&quot;请输入你要选择的主机[h for help]：&quot;</span> host</span><br><span class="line"></span><br><span class="line"><span class="comment">#通过case语句来匹配用户所输入的主机</span></span><br><span class="line">case <span class="variable">$host</span> <span class="keyword">in</span></span><br><span class="line"><span class="number">1</span>|DB1)</span><br><span class="line">ssh root@<span class="number">10.1</span>.<span class="number">1.1</span></span><br><span class="line">;;</span><br><span class="line"><span class="number">2</span>|DB2)</span><br><span class="line">ssh root@<span class="number">10.1</span>.<span class="number">1.2</span></span><br><span class="line">;;</span><br><span class="line"><span class="number">3</span>|web1)</span><br><span class="line">ssh root@<span class="number">10.1</span>.<span class="number">1.250</span></span><br><span class="line">;;</span><br><span class="line"><span class="built_in">h</span>|help)</span><br><span class="line"><span class="built_in">clear</span>;menu</span><br><span class="line">;;</span><br><span class="line">q|quit)</span><br><span class="line"><span class="keyword">exit</span></span><br><span class="line">;;</span><br><span class="line">esac</span><br><span class="line">done</span><br><span class="line"></span><br><span class="line">自己完善功能：</span><br><span class="line"><span class="number">1</span>. 用户选择主机后，需要事先推送公钥；如何判断公钥是否已推</span><br><span class="line"><span class="number">2</span>. 比如选择web1时，再次提示需要做的操作，比如：</span><br><span class="line">clean log</span><br><span class="line">重启服务</span><br><span class="line"><span class="built_in">kill</span>某个进程</span><br></pre></td></tr></table></figure><p><strong>回顾信号：</strong></p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">1</span>) SIGHUP 重新加载配置    </span><br><span class="line"><span class="number">2</span>) SIGINT键盘中断^C</span><br><span class="line"><span class="number">3</span>) SIGQUIT      键盘退出</span><br><span class="line"><span class="number">9</span>) SIGKILL 强制终止</span><br><span class="line"><span class="number">15</span>) SIGTERM    终止（正常结束），缺省信号</span><br><span class="line"><span class="number">18</span>) SIGCONT       继续</span><br><span class="line"><span class="number">19</span>) SIGSTOP       停止</span><br><span class="line"><span class="number">20</span>) SIGTSTP     暂停^Z</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;h1 id=&quot;case语句&quot;&gt;&lt;a href=&quot;#case语句&quot; class=&quot;headerlink&quot; title=&quot;case语句&quot;&gt;&lt;/a&gt;case语句&lt;/h1&gt;&lt;ol&gt;
&lt;li&gt;case语句为多重匹配语句&lt;/li&gt;
&lt;li&gt;如果匹配成功，执行相匹配的命令&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&quot;1-语法结构&quot;&gt;&lt;a href=&quot;#1-语法结构&quot; class=&quot;headerlink&quot; title=&quot;1. 语法结构&quot;&gt;&lt;/a&gt;1. 语法结构&lt;/h2&gt;</summary>
    
    
    
    
  </entry>
  
  <entry>
    <title>Linux ftp配置</title>
    <link href="http://example.com/2020/11/11/Linux-ftp%E9%85%8D%E7%BD%AE/"/>
    <id>http://example.com/2020/11/11/Linux-ftp%E9%85%8D%E7%BD%AE/</id>
    <published>2020-11-11T09:12:50.000Z</published>
    <updated>2020-11-11T09:12:50.138Z</updated>
    
    
    
    
    
  </entry>
  
  <entry>
    <title>node重新安装依赖模块</title>
    <link href="http://example.com/2020/11/10/node%E9%87%8D%E6%96%B0%E5%AE%89%E8%A3%85%E4%BE%9D%E8%B5%96%E6%A8%A1%E5%9D%97-1/"/>
    <id>http://example.com/2020/11/10/node%E9%87%8D%E6%96%B0%E5%AE%89%E8%A3%85%E4%BE%9D%E8%B5%96%E6%A8%A1%E5%9D%97-1/</id>
    <published>2020-11-10T12:26:06.000Z</published>
    <updated>2020-11-11T08:24:08.782Z</updated>
    
    <content type="html"><![CDATA[<img src="/2020/11/10/node%E9%87%8D%E6%96%B0%E5%AE%89%E8%A3%85%E4%BE%9D%E8%B5%96%E6%A8%A1%E5%9D%97-1/timg.png" class><h3 id="windows操作系统"><a href="#windows操作系统" class="headerlink" title="windows操作系统"></a>windows操作系统</h3><p><code>npm install -g rimraf</code><br><code>rimraf node_modules</code><br><code>rimraf package-lock.json</code></p><a id="more"></a><h3 id="Linux操作系统"><a href="#Linux操作系统" class="headerlink" title="Linux操作系统"></a>Linux操作系统</h3><p><code>rm -rf node_modules</code><br><code>rm package-lock.json</code></p><h3 id="2-清除缓存（非必须）下方代码不分操作系统"><a href="#2-清除缓存（非必须）下方代码不分操作系统" class="headerlink" title="2.清除缓存（非必须）下方代码不分操作系统"></a>2.清除缓存（非必须）下方代码不分操作系统</h3><p><code>npm cache clear --force</code></p><h3 id="3-重新安装依赖包，安装完成会自动生成package-lock-json"><a href="#3-重新安装依赖包，安装完成会自动生成package-lock-json" class="headerlink" title="3.重新安装依赖包，安装完成会自动生成package-lock.json"></a>3.重新安装依赖包，安装完成会自动生成package-lock.json</h3><p><code>npm config install -g cnpm --registry=https://registry.npm.taobao.org</code></p>]]></content>
    
    
    <summary type="html">&lt;img src=&quot;/2020/11/10/node%E9%87%8D%E6%96%B0%E5%AE%89%E8%A3%85%E4%BE%9D%E8%B5%96%E6%A8%A1%E5%9D%97-1/timg.png&quot; class&gt;
&lt;h3 id=&quot;windows操作系统&quot;&gt;&lt;a href=&quot;#windows操作系统&quot; class=&quot;headerlink&quot; title=&quot;windows操作系统&quot;&gt;&lt;/a&gt;windows操作系统&lt;/h3&gt;&lt;p&gt;&lt;code&gt;npm install -g rimraf&lt;/code&gt;&lt;br&gt;&lt;code&gt;rimraf node_modules&lt;/code&gt;&lt;br&gt;&lt;code&gt;rimraf package-lock.json&lt;/code&gt;&lt;/p&gt;</summary>
    
    
    
    <category term="node" scheme="http://example.com/categories/node/"/>
    
    
    <category term="博客           //多个标签可以这样添加" scheme="http://example.com/tags/%E5%8D%9A%E5%AE%A2-%E5%A4%9A%E4%B8%AA%E6%A0%87%E7%AD%BE%E5%8F%AF%E4%BB%A5%E8%BF%99%E6%A0%B7%E6%B7%BB%E5%8A%A0/"/>
    
    <category term="hexo" scheme="http://example.com/tags/hexo/"/>
    
  </entry>
  
  <entry>
    <title>shell变量定义</title>
    <link href="http://example.com/2020/10/20/shell%E7%BC%96%E7%A8%8B%E4%B9%8B%E5%8F%98%E9%87%8F%E5%AE%9A%E4%B9%89/"/>
    <id>http://example.com/2020/10/20/shell%E7%BC%96%E7%A8%8B%E4%B9%8B%E5%8F%98%E9%87%8F%E5%AE%9A%E4%B9%89/</id>
    <published>2020-10-20T12:26:06.000Z</published>
    <updated>2020-11-11T08:44:24.777Z</updated>
    
    <content type="html"><![CDATA[<ul><li><p>① Shell的基本语法结构</p><p>如：变量定义、条件判断、循环语句(for、until、while)、分支语句、函数和数组等； </p><p>② 基本正则表达式的运用;</p><p>③ 文件处理三剑客：grep、sed、awk工具的使用；</p><p>e 使用shell脚本完成一些较复杂的任务，如：服务搭建、批量处理等。</p></li></ul><a id="more"></a><h1 id="一、SHELL介绍"><a href="#一、SHELL介绍" class="headerlink" title="一、SHELL介绍"></a>一、SHELL介绍</h1><p><strong>前言：</strong></p><p>计算机只能认识（识别）机器语言(0和1)，如（11000000 这种）。但是，我们的程序猿们不能直接去写01这样的代码，所以，要想将程序猿所开发的代码在计算机上运行，就必须找”人”（工具）来==翻译成机器语言==，这个”人”(工具)就是我们常常所说的**==编译器==<strong>或者</strong>==解释器==**。</p><p><img src="/%E7%BC%96%E8%AF%91%E5%92%8C%E8%A7%A3%E9%87%8A%E5%9E%8B%E8%AF%AD%E8%A8%80%E5%8C%BA%E5%88%AB.png" alt="编译和解释型语言区别"></p><p>##1. 编程语言分类</p><ul><li><strong>编译型语言：</strong></li></ul><p>​    ==程序在执行之前需要一个专门的编译过程==，把程序编译成为机器语言文件，运行时不需要重新翻译，直接使用编译的结果就行了。程序执行效率高，依赖编译器，跨平台性差些。如C、C++</p><ul><li><strong>解释型语言：</strong></li></ul><p>​    程序不需要编译，程序在运行时由**==解释器==**翻译成机器语言，每执行一次都要翻译一次。因此效率比较低。比如Python/JavaScript/ Perl /ruby/==Shell==等都是解释型语言。</p><p><img src="/2020/10/20/shell%E7%BC%96%E7%A8%8B%E4%B9%8B%E5%8F%98%E9%87%8F%E5%AE%9A%E4%B9%89/%E8%AF%AD%E8%A8%80%E5%88%86%E7%B1%BB.png" alt="./语言分类"></p><ul><li><strong>总结</strong></li></ul><p>编译型语言比解释型语言==速度较快==，但是不如解释型语言==跨平台性好==。如果做底层开发或者大型应用程序或者操作系开发一==般都用编译型语言==；如果是一些服务器脚本及一些辅助的接口，对速度要求不高、对各个平台的==兼容性有要求==的话则一般都用==解释型语言==。</p><p>##2. shell简介</p><p><img src="/00_shell%E4%BB%8B%E7%BB%8D.png" alt="00_shell介绍"></p><p><strong>总结：</strong></p><ul><li>==shell就是人机交互的一个桥梁==</li><li>shell的种类</li></ul><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">[<span class="type">root</span>@<span class="type">MissHou</span> ~]<span class="comment"># cat /etc/shells </span></span><br><span class="line">/bin/sh<span class="comment">#是bash的一个快捷方式</span></span><br><span class="line">/bin/bash<span class="comment">#bash是大多数Linux默认的shell，包含的功能几乎可以涵盖shell所有的功能</span></span><br><span class="line">/sbin/nologin<span class="comment">#表示非交互，不能登录操作系统</span></span><br><span class="line">/bin/dash<span class="comment">#小巧，高效，功能相比少一些</span></span><br><span class="line"></span><br><span class="line">/bin/csh<span class="comment">#具有C语言风格的一种shell，具有许多特性，但也有一些缺陷</span></span><br><span class="line">/bin/tcsh<span class="comment">#是csh的增强版，完全兼容csh</span></span><br></pre></td></tr></table></figure><p><strong>思考：终端和shell有什么关系？</strong></p><p><img src="/2020/10/20/shell%E7%BC%96%E7%A8%8B%E4%B9%8B%E5%8F%98%E9%87%8F%E5%AE%9A%E4%B9%89/01_shell%E4%BB%8B%E7%BB%8D.png" alt="01_shell介绍"></p><p>##3. shell脚本</p><h3 id="㈠-什么是shell脚本？"><a href="#㈠-什么是shell脚本？" class="headerlink" title="㈠ 什么是shell脚本？"></a>㈠ 什么是shell脚本？</h3><ul><li>一句话概括</li></ul><p>简单来说就是将==需要执行的命令==保存到文本中，==按照顺序执行==。它是解释型的，意味着不需要编译。</p><ul><li>准确叙述</li></ul><p><strong>若干命令 + 脚本的基本格式 + 脚本特定语法 + 思想= shell脚本</strong></p><h3 id="㈡-什么时候用到脚本"><a href="#㈡-什么时候用到脚本" class="headerlink" title="㈡ 什么时候用到脚本?"></a>㈡ 什么时候用到脚本?</h3><p><strong>重复化</strong>、复杂化的工作，通过把工作的命令写成脚本，以后仅仅需要执行脚本就能完成这些工作。</p><h3 id="㈢-shell脚本能干啥"><a href="#㈢-shell脚本能干啥" class="headerlink" title="㈢ shell脚本能干啥?"></a>㈢ shell脚本能干啥?</h3><p> ①自动化软件部署    LAMP/LNMP/Tomcat…    </p><p> ②自动化管理        系统初始化脚本、批量更改主机密码、推送公钥…</p><p> ③==自动化分析处理==     统计网站访问量</p><p> ④==自动化备份==        数据库备份、日志转储…</p><p> ⑤自动化监控脚本</p><h3 id="㈣-如何学习shell脚本？"><a href="#㈣-如何学习shell脚本？" class="headerlink" title="㈣ 如何学习shell脚本？"></a>㈣ 如何学习shell脚本？</h3><ol><li>尽可能记忆更多的命令(记忆命令使用功能和场景)</li><li>掌握脚本的标准的格式（指定魔法字节、使用标准的执行方式运行脚本）</li><li>必须==<strong>熟悉掌握</strong>==脚本的基本语法（重点)</li></ol><h3 id="㈤-学习shell脚本的秘诀"><a href="#㈤-学习shell脚本的秘诀" class="headerlink" title="㈤ 学习shell脚本的秘诀"></a>㈤ 学习shell脚本的秘诀</h3><p>多看（看懂）——&gt;模仿（多练）——&gt;多思考（多写）</p><h3 id="㈥-shell脚本的基本写法"><a href="#㈥-shell脚本的基本写法" class="headerlink" title="㈥ shell脚本的基本写法"></a>㈥ shell脚本的基本写法</h3><p>1）<strong>脚本第一行</strong>，魔法字符==<strong>#!</strong>==指定解释器【==必写==】</p><p><code>#!/bin/bash</code>  表示以下内容使用bash解释器解析</p><p><strong>==注意：==</strong><br>如果直接将解释器路径写死在脚本里，可能在某些系统就会存在找不到解释器的兼容性问题，所以可以使用:<code>#!/bin/env 解释器</code></p><p>2）<strong>脚本第二部分</strong>，注释(#号)说明，对脚本的基本信息进行描述【可选】</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#!/bin/env bash</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 以下内容是对脚本的基本信息的描述</span></span><br><span class="line"><span class="comment"># Name: 名字</span></span><br><span class="line"><span class="comment"># Desc:描述describe</span></span><br><span class="line"><span class="comment"># Path:存放路径</span></span><br><span class="line"><span class="comment"># Usage:用法</span></span><br><span class="line"><span class="comment"># Update:更新时间</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#下面就是脚本的具体内容</span></span><br><span class="line">commands</span><br><span class="line">...</span><br></pre></td></tr></table></figure><p>3）<strong>脚本第三部分</strong>，脚本要实现的具体代码内容</p><h3 id="㈦-shell脚本的执行方法"><a href="#㈦-shell脚本的执行方法" class="headerlink" title="㈦ shell脚本的执行方法"></a>㈦ shell脚本的执行方法</h3><ul><li>标准脚本执行方法（建议）</li></ul><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">1</span>) 编写人生第一个shell脚本</span><br><span class="line">[<span class="type">root</span>@<span class="type">MissHou</span> <span class="type">shell01</span>]<span class="comment"># cat first_shell.sh</span></span><br><span class="line"><span class="comment">#!/bin/env bash</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 以下内容是对脚本的基本信息的描述</span></span><br><span class="line"><span class="comment"># Name: first_shell.sh</span></span><br><span class="line"><span class="comment"># Desc: num1</span></span><br><span class="line"><span class="comment"># Path: /shell01/first_shell.sh</span></span><br><span class="line"><span class="comment"># Usage:/shell01/first_shell.sh</span></span><br><span class="line"><span class="comment"># Update:2019-05-05</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;hello world&quot;</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;hello world&quot;</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;hello world&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="number">2</span>) 脚本增加可执行权限</span><br><span class="line">[<span class="type">root</span>@<span class="type">MissHou</span> <span class="type">shell01</span>]<span class="comment"># chmod +x first_shell.sh</span></span><br><span class="line"></span><br><span class="line"><span class="number">3</span>) 标准方式执行脚本</span><br><span class="line">[<span class="type">root</span>@<span class="type">MissHou</span> <span class="type">shell01</span>]<span class="comment"># pwd</span></span><br><span class="line">/shell01</span><br><span class="line">[<span class="type">root</span>@<span class="type">MissHou</span> <span class="type">shell01</span>]<span class="comment"># /shell01/first_shell.sh</span></span><br><span class="line">或者</span><br><span class="line">[<span class="type">root</span>@<span class="type">MissHou</span> <span class="type">shell01</span>]<span class="comment"># ./first_shell.sh</span></span><br><span class="line"></span><br><span class="line">注意：标准执行方式脚本必须要有可执行权限。</span><br></pre></td></tr></table></figure><ul><li>非标准的执行方法（不建议）</li></ul><ol><li>直接在命令行指定解释器执行</li></ol><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">[<span class="type">root</span>@<span class="type">MissHou</span> <span class="type">shell01</span>]<span class="comment"># bash first_shell.sh</span></span><br><span class="line">[<span class="type">root</span>@<span class="type">MissHou</span> <span class="type">shell01</span>]<span class="comment"># sh first_shell.sh</span></span><br><span class="line">[<span class="type">root</span>@<span class="type">MissHou</span> <span class="type">shell01</span>]<span class="comment"># bash -x first_shell.sh</span></span><br><span class="line">+ <span class="built_in">echo</span> <span class="string">&#x27;hello world&#x27;</span></span><br><span class="line">hello world</span><br><span class="line">+ <span class="built_in">echo</span> <span class="string">&#x27;hello world&#x27;</span></span><br><span class="line">hello world</span><br><span class="line">+ <span class="built_in">echo</span> <span class="string">&#x27;hello world&#x27;</span></span><br><span class="line">hello world</span><br><span class="line"></span><br><span class="line"><span class="literal">-x</span>:一般用于排错，查看脚本的执行过程</span><br><span class="line"><span class="literal">-n</span>:用来查看脚本的语法是否有问题</span><br></pre></td></tr></table></figure><ol start="2"><li>使用<code>source</code>命令读取脚本文件,执行文件里的代码</li></ol><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">[<span class="type">root</span>@<span class="type">MissHou</span> <span class="type">shell01</span>]<span class="comment"># source first_shell.sh</span></span><br><span class="line">hello world</span><br><span class="line">hello world</span><br><span class="line">hello world</span><br></pre></td></tr></table></figure><p><strong>小试牛刀：</strong>写一个木有灵魂的脚本，要求如下：</p><ol><li><p>删除/tmp/目录下的所有文件</p></li><li><p>然后在/tmp目录里创建3个目录，分别是dir1~dir3     </p></li><li><p>拷贝/etc/hosts文件到刚创建的dir1目录里       </p></li><li><p>最后打印”==报告首长，任务已于2019-05-05 10:10:10时间完成==”内容   </p><p><code>echo &quot;报告首长，任务已于$(date +&#39;%F %T&#39;)&quot;</code></p></li></ol><h1 id="二、变量的定义"><a href="#二、变量的定义" class="headerlink" title="==二、变量的定义=="></a>==二、变量的定义==</h1><h2 id="1-变量是什么？"><a href="#1-变量是什么？" class="headerlink" title="1. 变量是什么？"></a>1. 变量是什么？</h2><p>一句话概括：变量是用来临时保存数据的，该数据是可以变化的数据。</p><h2 id="2-什么时候需要定义变量？"><a href="#2-什么时候需要定义变量？" class="headerlink" title="2. 什么时候需要定义变量？"></a>2. 什么时候需要定义变量？</h2><ul><li>如果某个内容需要多次使用，并且在代码中<strong>重复出现</strong>，那么可以用变量代表该内容。这样在修改内容的时候，仅仅需要修改变量的值。</li><li>在代码运作的过程中，可能会把某些命令的执行结果保存起来，后续代码需要使用这些结果，就可以直接使用这个变量。</li></ul><h2 id="3-变量如何定义？"><a href="#3-变量如何定义？" class="headerlink" title="3.变量如何定义？"></a>3.变量如何定义？</h2><p><strong>变量名=====变量值</strong></p><p>变量名：用来临时保存数据的</p><p>变量值：就是临时的可变化的数据</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">[<span class="type">root</span>@<span class="type">MissHou</span> ~]<span class="comment"># A=hello定义变量A</span></span><br><span class="line">[<span class="type">root</span>@<span class="type">MissHou</span> ~]<span class="comment"># echo $A调用变量A，要给钱的，不是人民币是美元&quot;$&quot;</span></span><br><span class="line">hello</span><br><span class="line">[<span class="type">root</span>@<span class="type">MissHou</span> ~]<span class="comment"># echo $&#123;A&#125;还可以这样调用，不管你的姿势多优雅，总之要给钱</span></span><br><span class="line">hello</span><br><span class="line">[<span class="type">root</span>@<span class="type">MissHou</span> ~]<span class="comment"># A=world因为是变量所以可以变，移情别恋是常事</span></span><br><span class="line">[<span class="type">root</span>@<span class="type">MissHou</span> ~]<span class="comment"># echo $A不管你是谁，只要调用就要给钱</span></span><br><span class="line">world</span><br><span class="line">[<span class="type">root</span>@<span class="type">MissHou</span> ~]<span class="comment"># unset A不跟你玩了，取消变量</span></span><br><span class="line">[<span class="type">root</span>@<span class="type">MissHou</span> ~]<span class="comment"># echo $A从此，我单身了，你可以给我介绍任何人</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="4-变量的定义规则"><a href="#4-变量的定义规则" class="headerlink" title="4. 变量的定义规则"></a>4. 变量的定义规则</h2><p>虽然可以给变量（变量名）赋予任何值；但是，对于==变量名==也是要求的！:unamused:</p><h3 id="㈠-变量名区分大小写"><a href="#㈠-变量名区分大小写" class="headerlink" title="㈠ 变量名区分大小写"></a>㈠ 变量名区分大小写</h3><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">[<span class="type">root</span>@<span class="type">MissHou</span> ~]<span class="comment"># A=hello</span></span><br><span class="line">[<span class="type">root</span>@<span class="type">MissHou</span> ~]<span class="comment"># a=world</span></span><br><span class="line">[<span class="type">root</span>@<span class="type">MissHou</span> ~]<span class="comment"># echo $A</span></span><br><span class="line">hello</span><br><span class="line">[<span class="type">root</span>@<span class="type">MissHou</span> ~]<span class="comment"># echo $a</span></span><br><span class="line">world</span><br></pre></td></tr></table></figure><h3 id="㈡-变量名不能有特殊符号"><a href="#㈡-变量名不能有特殊符号" class="headerlink" title="㈡ 变量名不能有特殊符号"></a>㈡ 变量名不能有特殊符号</h3><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">[<span class="type">root</span>@<span class="type">MissHou</span> ~]<span class="comment"># *A=hello</span></span><br><span class="line"><span class="literal">-bash</span>: *A=hello: command not found</span><br><span class="line">[<span class="type">root</span>@<span class="type">MissHou</span> ~]<span class="comment"># ?A=hello</span></span><br><span class="line"><span class="literal">-bash</span>: ?A=hello: command not found</span><br><span class="line">[<span class="type">root</span>@<span class="type">MissHou</span> ~]<span class="comment"># @A=hello</span></span><br><span class="line"><span class="literal">-bash</span>: @A=hello: command not found</span><br><span class="line"></span><br><span class="line">特别说明：对于有空格的字符串给变量赋值时，要用引号引起来</span><br><span class="line">[<span class="type">root</span>@<span class="type">MissHou</span> ~]<span class="comment"># A=hello world</span></span><br><span class="line"><span class="literal">-bash</span>: world: command not found</span><br><span class="line">[<span class="type">root</span>@<span class="type">MissHou</span> ~]<span class="comment"># A=&quot;hello world&quot;</span></span><br><span class="line">[<span class="type">root</span>@<span class="type">MissHou</span> ~]<span class="comment"># A=&#x27;hello world&#x27;</span></span><br></pre></td></tr></table></figure><h3 id="㈢-变量名不能以数字开头"><a href="#㈢-变量名不能以数字开头" class="headerlink" title="㈢ 变量名不能以数字开头"></a>㈢ 变量名不能以数字开头</h3><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">[<span class="type">root</span>@<span class="type">MissHou</span> ~]<span class="comment"># 1A=hello</span></span><br><span class="line"><span class="literal">-bash</span>: <span class="number">1</span>A=hello: command not found</span><br><span class="line">[<span class="type">root</span>@<span class="type">MissHou</span> ~]<span class="comment"># A1=hello</span></span><br><span class="line">注意：不能以数字开头并不代表变量名中不能包含数字呦。</span><br></pre></td></tr></table></figure><h3 id="㈣-等号两边不能有任何空格"><a href="#㈣-等号两边不能有任何空格" class="headerlink" title="㈣ 等号两边不能有任何空格"></a>㈣ 等号两边不能有任何空格</h3><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">[<span class="type">root</span>@<span class="type">MissHou</span> ~]<span class="comment"># A =123</span></span><br><span class="line"><span class="literal">-bash</span>: A: command not found</span><br><span class="line">[<span class="type">root</span>@<span class="type">MissHou</span> ~]<span class="comment"># A= 123</span></span><br><span class="line"><span class="literal">-bash</span>: <span class="number">123</span>: command not found</span><br><span class="line">[<span class="type">root</span>@<span class="type">MissHou</span> ~]<span class="comment"># A = 123</span></span><br><span class="line"><span class="literal">-bash</span>: A: command not found</span><br><span class="line">[<span class="type">root</span>@<span class="type">MissHou</span> ~]<span class="comment"># A=123</span></span><br><span class="line">[<span class="type">root</span>@<span class="type">MissHou</span> ~]<span class="comment"># echo $A</span></span><br><span class="line"><span class="number">123</span></span><br></pre></td></tr></table></figure><h3 id="㈤-变量名尽量做到见名知意"><a href="#㈤-变量名尽量做到见名知意" class="headerlink" title="㈤ 变量名尽量做到见名知意"></a>㈤ 变量名尽量做到见名知意</h3><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">NTP_IP=<span class="number">10.1</span>.<span class="number">1.1</span></span><br><span class="line"><span class="built_in">DIR</span>=/u01/app1</span><br><span class="line">TMP_FILE=/var/log/<span class="number">1</span>.log</span><br><span class="line">...</span><br><span class="line"></span><br><span class="line">说明：一般变量名使用大写（小写也可以），不要同一个脚本中变量全是a,b,c等不容易阅读</span><br></pre></td></tr></table></figure><h2 id="5-变量的定义方式有哪些？"><a href="#5-变量的定义方式有哪些？" class="headerlink" title="5. 变量的定义方式有哪些？"></a>5. 变量的定义方式有哪些？</h2><h3 id="㈠-基本方式"><a href="#㈠-基本方式" class="headerlink" title="㈠ 基本方式"></a>㈠ 基本方式</h3><blockquote><p>直接赋值给一个变量</p></blockquote><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">[<span class="type">root</span>@<span class="type">MissHou</span> ~]<span class="comment"># A=1234567</span></span><br><span class="line">[<span class="type">root</span>@<span class="type">MissHou</span> ~]<span class="comment"># echo $A</span></span><br><span class="line"><span class="number">1234567</span></span><br><span class="line">[<span class="type">root</span>@<span class="type">MissHou</span> ~]<span class="comment"># echo $&#123;A:2:4&#125;表示从A变量中第3个字符开始截取，截取4个字符</span></span><br><span class="line"><span class="number">3456</span></span><br><span class="line"></span><br><span class="line">说明：</span><br><span class="line"><span class="variable">$</span>变量名 和 <span class="variable">$</span>&#123;变量名&#125;的异同</span><br><span class="line">相同点：都可以调用变量</span><br><span class="line">不同点：<span class="variable">$</span>&#123;变量名&#125;可以只截取变量的一部分，而<span class="variable">$</span>变量名不可以</span><br></pre></td></tr></table></figure><h3 id="㈡-命令执行结果赋值给变量"><a href="#㈡-命令执行结果赋值给变量" class="headerlink" title="㈡ 命令执行结果赋值给变量"></a>㈡ 命令执行结果赋值给变量</h3><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">[<span class="type">root</span>@<span class="type">MissHou</span> ~]<span class="comment"># B=`date +%F`</span></span><br><span class="line">[<span class="type">root</span>@<span class="type">MissHou</span> ~]<span class="comment"># echo $B</span></span><br><span class="line"><span class="number">2019</span><span class="literal">-04</span><span class="literal">-16</span></span><br><span class="line">[<span class="type">root</span>@<span class="type">MissHou</span> ~]<span class="comment"># C=$(uname -r)</span></span><br><span class="line">[<span class="type">root</span>@<span class="type">MissHou</span> ~]<span class="comment"># echo $C</span></span><br><span class="line"><span class="number">2.6</span>.<span class="number">32</span><span class="literal">-696</span>.el6.x86_64</span><br></pre></td></tr></table></figure><h3 id="㈢-交互式定义变量-read"><a href="#㈢-交互式定义变量-read" class="headerlink" title="㈢ ==交互式定义变量(read)=="></a>㈢ ==交互式定义变量(read)==</h3><p><strong>目的：</strong>让==用户自己==给变量赋值，比较灵活。</p><p><strong>语法：</strong><code>read [选项] 变量名</code></p><p><strong>常见选项：</strong></p><table><thead><tr><th>选项</th><th>释义</th></tr></thead><tbody><tr><td>-p</td><td>定义提示用户的信息</td></tr><tr><td>-n</td><td>定义字符数（限制变量值的长度）</td></tr><tr><td>-s</td><td>不显示（不显示用户输入的内容）</td></tr><tr><td>-t</td><td>定义超时时间，默认单位为秒（限制用户输入变量值的超时时间）</td></tr></tbody></table><p><strong>举例说明：</strong></p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">用法<span class="number">1</span>：用户自己定义变量值</span><br><span class="line">[<span class="type">root</span>@<span class="type">MissHou</span> ~]<span class="comment"># read name</span></span><br><span class="line">harry</span><br><span class="line">[<span class="type">root</span>@<span class="type">MissHou</span> ~]<span class="comment"># echo $name</span></span><br><span class="line">harry</span><br><span class="line">[<span class="type">root</span>@<span class="type">MissHou</span> ~]<span class="comment"># read -p &quot;Input your name:&quot; name</span></span><br><span class="line">Input your name:tom</span><br><span class="line">[<span class="type">root</span>@<span class="type">MissHou</span> ~]<span class="comment"># echo $name</span></span><br><span class="line">tom</span><br><span class="line"></span><br><span class="line">用法<span class="number">2</span>：变量值来自文件</span><br><span class="line">[<span class="type">root</span>@<span class="type">MissHou</span> ~]<span class="comment"># cat 1.txt </span></span><br><span class="line"><span class="number">10.1</span>.<span class="number">1.1</span> <span class="number">255.255</span>.<span class="number">255.0</span></span><br><span class="line"></span><br><span class="line">[<span class="type">root</span>@<span class="type">MissHou</span> ~]<span class="comment"># read ip mask &lt; 1.txt </span></span><br><span class="line">[<span class="type">root</span>@<span class="type">MissHou</span> ~]<span class="comment"># echo $ip</span></span><br><span class="line"><span class="number">10.1</span>.<span class="number">1.1</span></span><br><span class="line">[<span class="type">root</span>@<span class="type">MissHou</span> ~]<span class="comment"># echo $mask</span></span><br><span class="line"><span class="number">255.255</span>.<span class="number">255.0</span></span><br></pre></td></tr></table></figure><h3 id="㈣-定义有类型的变量-declare"><a href="#㈣-定义有类型的变量-declare" class="headerlink" title="㈣ 定义有类型的变量(==declare==)"></a>㈣ 定义有类型的变量(==declare==)</h3><p><strong>目的：</strong>给变量做一些限制，固定变量的类型，比如：整型、只读</p><p><strong>用法：</strong><code>declare 选项 变量名=变量值</code></p><p><strong>常用选项：</strong></p><table><thead><tr><th>选项</th><th>释义</th><th>举例</th></tr></thead><tbody><tr><td>==-i==</td><td>将变量看成整数</td><td>declare -i A=123</td></tr><tr><td>==-r==</td><td>定义只读变量</td><td>declare -r B=hello</td></tr><tr><td>-a</td><td>定义普通数组；查看普通数组</td><td></td></tr><tr><td>-A</td><td>定义关联数组；查看关联数组</td><td></td></tr><tr><td>-x</td><td>将变量通过环境导出</td><td>declare -x AAA=123456 等于 export AAA=123456</td></tr></tbody></table><p><strong>举例说明：</strong></p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">[<span class="type">root</span>@<span class="type">MissHou</span> ~]<span class="comment"># declare -i A=123</span></span><br><span class="line">[<span class="type">root</span>@<span class="type">MissHou</span> ~]<span class="comment"># echo $A</span></span><br><span class="line"><span class="number">123</span></span><br><span class="line">[<span class="type">root</span>@<span class="type">MissHou</span> ~]<span class="comment"># A=hello</span></span><br><span class="line">[<span class="type">root</span>@<span class="type">MissHou</span> ~]<span class="comment"># echo $A</span></span><br><span class="line"><span class="number">0</span></span><br><span class="line"></span><br><span class="line">[<span class="type">root</span>@<span class="type">MissHou</span> ~]<span class="comment"># declare -r B=hello</span></span><br><span class="line">[<span class="type">root</span>@<span class="type">MissHou</span> ~]<span class="comment"># echo $B</span></span><br><span class="line">hello</span><br><span class="line">[<span class="type">root</span>@<span class="type">MissHou</span> ~]<span class="comment"># B=world</span></span><br><span class="line"><span class="literal">-bash</span>: B: readonly variable</span><br><span class="line">[<span class="type">root</span>@<span class="type">MissHou</span> ~]<span class="comment"># unset B</span></span><br><span class="line"><span class="literal">-bash</span>: unset: B: cannot unset: readonly variable</span><br></pre></td></tr></table></figure><h2 id="6-变量的分类"><a href="#6-变量的分类" class="headerlink" title="6. 变量的分类"></a>6. 变量的分类</h2><h3 id="㈠-本地变量"><a href="#㈠-本地变量" class="headerlink" title="㈠ 本地变量"></a>㈠ 本地变量</h3><ul><li>**==本地变量==**：当前用户自定义的变量。当前进程中有效，其他进程及当前进程的子进程无效。</li></ul><h3 id="㈡-环境变量"><a href="#㈡-环境变量" class="headerlink" title="㈡ 环境变量"></a>㈡ 环境变量</h3><ul><li><strong>环境变量</strong>：当前进程有效，并且能够被<strong>子进程</strong>调用。<ul><li><code>env</code>查看当前用户的环境变量</li><li><code>set</code>查询当前用户的所有变量(临时变量与环境变量) </li><li><code>export 变量名=变量值</code>    或者  <code>变量名=变量值；export 变量名</code></li></ul></li></ul><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">[<span class="type">root</span>@<span class="type">MissHou</span> ~]<span class="comment"># export A=hello临时将一个本地变量（临时变量）变成环境变量</span></span><br><span class="line">[<span class="type">root</span>@<span class="type">MissHou</span> ~]<span class="comment"># env|grep ^A</span></span><br><span class="line">A=hello</span><br><span class="line"></span><br><span class="line">永久生效：</span><br><span class="line">vim /etc/profile 或者 ~/.bashrc</span><br><span class="line">export A=hello</span><br><span class="line">或者</span><br><span class="line">A=hello</span><br><span class="line">export A</span><br><span class="line"></span><br><span class="line">说明：系统中有一个变量PATH，环境变量</span><br><span class="line">export PATH=/usr/local/mysql/bin:<span class="variable">$PATH</span></span><br></pre></td></tr></table></figure><h3 id="㈢-全局变量"><a href="#㈢-全局变量" class="headerlink" title="㈢ 全局变量"></a>㈢ 全局变量</h3><ul><li><p><strong>全局变量</strong>：全局所有的用户和程序都能调用，且继承，新建的用户也默认能调用.</p></li><li><p><strong>解读相关配置文件</strong></p></li></ul><table><thead><tr><th>文件名</th><th>说明</th><th>备注</th></tr></thead><tbody><tr><td>$HOME/.bashrc</td><td>当前用户的bash信息,用户==登录==时读取</td><td>定义别名、umask、函数等</td></tr><tr><td>$HOME/.bash_profile</td><td>当前用户的环境变量，用户==登录==时读取</td><td></td></tr><tr><td>$HOME/.bash_logout</td><td>当前用户==退出==当前shell时最后读取</td><td>定义用户退出时执行的程序等</td></tr><tr><td>/etc/bashrc</td><td>全局的bash信息，所有用户都生效</td><td></td></tr><tr><td>/etc/profile</td><td>全局环境变量信息</td><td>系统和所有用户都生效</td></tr><tr><td>$HOME/.bash_history</td><td>用户的历史命令</td><td>history -w   保存历史记录         history -c  清空历史记录</td></tr></tbody></table><p><strong>说明：</strong>以上文件修改后，都需要重新==source==让其生效或者退出重新登录。</p><ul><li><strong>用户登录</strong>系统<strong>读取</strong>相关==文件的顺序==<ol><li><code>/etc/profile</code></li><li><code>$HOME/.bash_profile</code></li><li><code>$HOME/.bashrc</code></li><li><code>/etc/bashrc</code></li><li><code>$HOME/.bash_logout</code></li></ol></li></ul><h3 id="㈣-系统变量"><a href="#㈣-系统变量" class="headerlink" title="㈣ ==系统变量=="></a>㈣ ==系统变量==</h3><ul><li><strong>系统变量(内置bash中变量)</strong> ： shell本身已经固定好了它的名字和作用.</li></ul><table><thead><tr><th>内置变量</th><th>含义</th></tr></thead><tbody><tr><td>==$?==</td><td>上一条命令执行后返回的状态；状态值为0表示执行正常，==非0==表示执行异常或错误</td></tr><tr><td>$0</td><td>当前执行的程序或脚本名</td></tr><tr><td>==$#==</td><td>脚本后面接的参数的==个数==</td></tr><tr><td>==$*==</td><td>脚本后面==所有参数==，参数当成一个整体输出，每一个变量参数之间以空格隔开</td></tr><tr><td>==$@==</td><td>脚本后面==所有参数==，参数是独立的，也是全部输出</td></tr><tr><td>==$1~$9==</td><td>脚本后面的==位置参数==，$1表示第1个位置参数，依次类推</td></tr><tr><td>${10}~${n}</td><td>扩展位置参数,第10个位置变量必须用{}大括号括起来(2位数字以上扩起来)</td></tr><tr><td>==$$==</td><td>当前所在进程的进程号，如<code>echo $$</code></td></tr><tr><td>$！</td><td>后台运行的最后一个进程号 (当前终端）</td></tr><tr><td>!$</td><td>调用最后一条命令历史中的==参数==</td></tr></tbody></table><ul><li>进一步了解位置参数<code>$1~$&#123;n&#125;</code></li></ul><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#!/bin/bash</span></span><br><span class="line"><span class="comment">#了解shell内置变量中的位置参数含义</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;\<span class="variable">$0</span> = <span class="variable">$0</span>&quot;</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;\<span class="variable">$</span># = <span class="variable">$</span>#&quot;</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;\<span class="variable">$</span>* = <span class="variable">$</span>*&quot;</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;\<span class="variable">$</span>@ = <span class="variable">$</span>@&quot;</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;\<span class="variable">$1</span> = <span class="variable">$1</span>&quot;</span> </span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;\<span class="variable">$2</span> = <span class="variable">$2</span>&quot;</span> </span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;\<span class="variable">$3</span> = <span class="variable">$3</span>&quot;</span> </span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;\<span class="variable">$11</span> = <span class="variable">$</span>&#123;11&#125;&quot;</span> </span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;\<span class="variable">$12</span> = <span class="variable">$</span>&#123;12&#125;&quot;</span> </span><br></pre></td></tr></table></figure><ul><li>进一步了解$*和​$@的区别</li></ul><p><code>$*</code>：表示将变量看成一个整体<br><code>$@</code>：表示变量是独立的</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#!/bin/bash</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="string">&quot;<span class="variable">$</span>@&quot;</span></span><br><span class="line"><span class="keyword">do</span></span><br><span class="line"><span class="built_in">echo</span> <span class="variable">$i</span></span><br><span class="line">done</span><br><span class="line"></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;======我是分割线=======&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="string">&quot;<span class="variable">$</span>*&quot;</span></span><br><span class="line"><span class="keyword">do</span></span><br><span class="line"><span class="built_in">echo</span> <span class="variable">$i</span></span><br><span class="line">done</span><br><span class="line"></span><br><span class="line">[<span class="type">root</span>@<span class="type">MissHou</span> ~]<span class="comment"># bash 3.sh a b c</span></span><br><span class="line">a</span><br><span class="line">b</span><br><span class="line">c</span><br><span class="line">======我是分割线=======</span><br><span class="line">a b c</span><br><span class="line"></span><br></pre></td></tr></table></figure><h1 id="三、简单四则运算"><a href="#三、简单四则运算" class="headerlink" title="三、简单四则运算"></a>三、简单四则运算</h1><p>算术运算：默认情况下，shell就只能支持简单的==整数==运算</p><p>运算内容：加(+)、减(-)、乘(*)、除(/)、求余数（%）</p><h2 id="1-四则运算符号"><a href="#1-四则运算符号" class="headerlink" title="1. 四则运算符号"></a>1. 四则运算符号</h2><table><thead><tr><th>表达式</th><th>举例</th></tr></thead><tbody><tr><td>$((  ))</td><td>echo $((1+1))</td></tr><tr><td>$[ ]</td><td>echo $[10-5]</td></tr><tr><td>expr</td><td>expr 10 / 5</td></tr><tr><td>let</td><td>n=1;let n+=1  等价于  let n=n+1</td></tr></tbody></table><h2 id="2-了解i-和-i"><a href="#2-了解i-和-i" class="headerlink" title="2.了解i++和++i"></a>2.了解i++和++i</h2><ul><li>对变量的值的影响</li></ul><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">[<span class="type">root</span>@<span class="type">MissHou</span> ~]<span class="comment"># i=1</span></span><br><span class="line">[<span class="type">root</span>@<span class="type">MissHou</span> ~]<span class="comment"># let i++</span></span><br><span class="line">[<span class="type">root</span>@<span class="type">MissHou</span> ~]<span class="comment"># echo $i</span></span><br><span class="line"><span class="number">2</span></span><br><span class="line">[<span class="type">root</span>@<span class="type">MissHou</span> ~]<span class="comment"># j=1</span></span><br><span class="line">[<span class="type">root</span>@<span class="type">MissHou</span> ~]<span class="comment"># let ++j</span></span><br><span class="line">[<span class="type">root</span>@<span class="type">MissHou</span> ~]<span class="comment"># echo $j</span></span><br><span class="line"><span class="number">2</span></span><br></pre></td></tr></table></figure><ul><li>对==表达式==的值的影响</li></ul><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">[<span class="type">root</span>@<span class="type">MissHou</span> ~]<span class="comment"># unset i j</span></span><br><span class="line">[<span class="type">root</span>@<span class="type">MissHou</span> ~]<span class="comment"># i=1;j=1</span></span><br><span class="line">[<span class="type">root</span>@<span class="type">MissHou</span> ~]<span class="comment"># let x=i++         先赋值，再运算</span></span><br><span class="line">[<span class="type">root</span>@<span class="type">MissHou</span> ~]<span class="comment"># let y=++j         先运算，再赋值</span></span><br><span class="line">[<span class="type">root</span>@<span class="type">MissHou</span> ~]<span class="comment"># echo $i</span></span><br><span class="line"><span class="number">2</span></span><br><span class="line">[<span class="type">root</span>@<span class="type">MissHou</span> ~]<span class="comment"># echo $j</span></span><br><span class="line"><span class="number">2</span></span><br><span class="line">[<span class="type">root</span>@<span class="type">MissHou</span> ~]<span class="comment"># echo $x</span></span><br><span class="line"><span class="number">1</span></span><br><span class="line">[<span class="type">root</span>@<span class="type">MissHou</span> ~]<span class="comment"># echo $y</span></span><br><span class="line"><span class="number">2</span></span><br></pre></td></tr></table></figure><h1 id="四、扩展补充"><a href="#四、扩展补充" class="headerlink" title="四、扩展补充"></a>四、扩展补充</h1><h2 id="1-数组定义"><a href="#1-数组定义" class="headerlink" title="1. 数组定义"></a>1. 数组定义</h2><h3 id="㈠-数组分类"><a href="#㈠-数组分类" class="headerlink" title="㈠ 数组分类"></a>㈠ 数组分类</h3><ul><li>普通数组：只能使用整数作为数组索引(元素的下标)</li><li>关联数组：可以使用字符串作为数组索引(元素的下标)</li></ul><h3 id="㈡-普通数组定义"><a href="#㈡-普通数组定义" class="headerlink" title="㈡ 普通数组定义"></a>㈡ 普通数组定义</h3><ul><li>一次赋予一个值</li></ul><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">数组名[索引下标]=值</span><br><span class="line">array[<span class="number">0</span>]=v1</span><br><span class="line">array[<span class="number">1</span>]=v2</span><br><span class="line">array[<span class="number">2</span>]=v3</span><br><span class="line">array[<span class="number">3</span>]=v4</span><br></pre></td></tr></table></figure><ul><li>一次赋予多个值</li></ul><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">数组名=(值<span class="number">1</span> 值<span class="number">2</span> 值<span class="number">3</span> ...)</span><br><span class="line">array=(var1 var2 var3 var4)</span><br><span class="line"></span><br><span class="line">array1=(`cat /etc/passwd`)将文件中每一行赋值给array1数组</span><br><span class="line">array2=(`ls /root`)</span><br><span class="line">array3=(harry amy jack <span class="string">&quot;Miss Hou&quot;</span>)</span><br><span class="line">array4=(<span class="number">1</span> <span class="number">2</span> <span class="number">3</span> <span class="number">4</span> <span class="string">&quot;hello world&quot;</span> [<span class="number">10</span>]=linux)</span><br></pre></td></tr></table></figure><h3 id="㈢-数组的读取"><a href="#㈢-数组的读取" class="headerlink" title="㈢ 数组的读取"></a>㈢ 数组的读取</h3><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$</span>&#123;数组名[元素下标]&#125;</span><br><span class="line"></span><br><span class="line"><span class="built_in">echo</span> <span class="variable">$</span>&#123;array[<span class="number">0</span>]&#125;获取数组里第一个元素</span><br><span class="line"><span class="built_in">echo</span> <span class="variable">$</span>&#123;array[*]&#125;获取数组里的所有元素</span><br><span class="line"><span class="built_in">echo</span> <span class="variable">$</span>&#123;<span class="comment">#array[*]&#125;获取数组里所有元素个数</span></span><br><span class="line"><span class="built_in">echo</span> <span class="variable">$</span>&#123;!array[<span class="selector-tag">@</span>]&#125;    获取数组元素的索引下标</span><br><span class="line"><span class="built_in">echo</span> <span class="variable">$</span>&#123;array[<span class="selector-tag">@</span>]:<span class="number">1</span>:<span class="number">2</span>&#125;    访问指定的元素；<span class="number">1</span>代表从下标为<span class="number">1</span>的元素开始获取；<span class="number">2</span>代表获取后面几个元素</span><br><span class="line"></span><br><span class="line">查看普通数组信息：</span><br><span class="line">[<span class="type">root</span>@<span class="type">MissHou</span> ~]<span class="comment"># declare -a</span></span><br></pre></td></tr></table></figure><h3 id="㈣-关联数组定义"><a href="#㈣-关联数组定义" class="headerlink" title="㈣ 关联数组定义"></a>㈣ 关联数组定义</h3><h4 id="①首先声明关联数组"><a href="#①首先声明关联数组" class="headerlink" title="①首先声明关联数组"></a>①首先声明关联数组</h4><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">declare <span class="literal">-A</span> asso_array1</span><br><span class="line">declare <span class="literal">-A</span> asso_array2</span><br><span class="line">declare <span class="literal">-A</span> asso_array3</span><br></pre></td></tr></table></figure><h4 id="②-数组赋值"><a href="#②-数组赋值" class="headerlink" title="② 数组赋值"></a>② 数组赋值</h4><ul><li>一次赋一个值</li></ul><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">数组名[索引<span class="type">or</span>下标]=变量值</span><br><span class="line"><span class="comment"># asso_array1[linux]=one</span></span><br><span class="line"><span class="comment"># asso_array1[java]=two</span></span><br><span class="line"><span class="comment"># asso_array1[php]=three</span></span><br></pre></td></tr></table></figure><ul><li>一次赋多个值</li></ul><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># asso_array2=([name1]=harry [name2]=jack [name3]=amy [name4]=&quot;Miss Hou&quot;)</span></span><br></pre></td></tr></table></figure><ul><li>查看关联数组</li></ul><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># declare -A</span></span><br><span class="line">declare <span class="literal">-A</span> asso_array1=<span class="string">&#x27;([php]=&quot;three&quot; [java]=&quot;two&quot; [linux]=&quot;one&quot; )&#x27;</span></span><br><span class="line">declare <span class="literal">-A</span> asso_array2=<span class="string">&#x27;([name3]=&quot;amy&quot; [name2]=&quot;jack&quot; [name1]=&quot;harry&quot; [name4]=&quot;Miss Hou&quot; )&#x27;</span></span><br></pre></td></tr></table></figure><ul><li>获取关联数组值</li></ul><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># echo $&#123;asso_array1[linux]&#125;</span></span><br><span class="line">one</span><br><span class="line"><span class="comment"># echo $&#123;asso_array1[php]&#125;</span></span><br><span class="line">three</span><br><span class="line"><span class="comment"># echo $&#123;asso_array1[*]&#125;</span></span><br><span class="line">three two one</span><br><span class="line"><span class="comment"># echo $&#123;!asso_array1[*]&#125;</span></span><br><span class="line">php java linux</span><br><span class="line"><span class="comment"># echo $&#123;#asso_array1[*]&#125;</span></span><br><span class="line"><span class="number">3</span></span><br><span class="line"><span class="comment"># echo $&#123;#asso_array2[*]&#125;</span></span><br><span class="line"><span class="number">4</span></span><br><span class="line"><span class="comment"># echo $&#123;!asso_array2[*]&#125;</span></span><br><span class="line">name3 name2 name1 name4</span><br></pre></td></tr></table></figure><ul><li>其他定义方式</li></ul><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">[<span class="type">root</span>@<span class="type">MissHou</span> <span class="type">shell05</span>]<span class="comment"># declare -A books</span></span><br><span class="line">[<span class="type">root</span>@<span class="type">MissHou</span> <span class="type">shell05</span>]<span class="comment"># let books[linux]++</span></span><br><span class="line">[<span class="type">root</span>@<span class="type">MissHou</span> <span class="type">shell05</span>]<span class="comment"># declare -A|grep books</span></span><br><span class="line">declare <span class="literal">-A</span> books=<span class="string">&#x27;([linux]=&quot;1&quot; )&#x27;</span></span><br><span class="line">[<span class="type">root</span>@<span class="type">MissHou</span> <span class="type">shell05</span>]<span class="comment"># let books[linux]++</span></span><br><span class="line">[<span class="type">root</span>@<span class="type">MissHou</span> <span class="type">shell05</span>]<span class="comment"># declare -A|grep books</span></span><br><span class="line">declare <span class="literal">-A</span> books=<span class="string">&#x27;([linux]=&quot;2&quot; )&#x27;</span></span><br></pre></td></tr></table></figure><h2 id="2-其他变量定义"><a href="#2-其他变量定义" class="headerlink" title="2. 其他变量定义"></a>2. 其他变量定义</h2><ul><li>取出一个目录下的目录和文件：<code>dirname</code>和 <code>basename</code> </li></ul><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># A=/root/Desktop/shell/mem.txt </span></span><br><span class="line"><span class="comment"># echo $A</span></span><br><span class="line">/root/Desktop/shell/mem.txt</span><br><span class="line"><span class="comment"># dirname $A   取出目录</span></span><br><span class="line">/root/Desktop/shell</span><br><span class="line"><span class="comment"># basename $A  取出文件</span></span><br><span class="line">mem.txt</span><br></pre></td></tr></table></figure><ul><li>变量”内容”的删除和替换</li></ul><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">一个“%”代表从右往左去掉一个/key/</span><br><span class="line">两个“%%”代表从右往左最大去掉/key/</span><br><span class="line">一个“<span class="comment">#”代表从左往右去掉一个/key/</span></span><br><span class="line">两个“<span class="comment">##”代表从左往右最大去掉/key/</span></span><br><span class="line"></span><br><span class="line">举例说明：</span><br><span class="line"><span class="comment"># url=www.taobao.com</span></span><br><span class="line"><span class="comment"># echo $&#123;#url&#125;     获取变量的长度</span></span><br><span class="line"><span class="comment"># echo $&#123;url#*.&#125;</span></span><br><span class="line"><span class="comment"># echo $&#123;url##*.&#125;</span></span><br><span class="line"><span class="comment"># echo $&#123;url%.*&#125;</span></span><br><span class="line"><span class="comment"># echo $&#123;url%%.*&#125;</span></span><br></pre></td></tr></table></figure><ul><li>以下了解，自己完成</li></ul><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br></pre></td><td class="code"><pre><span class="line">替换：/ 和 //</span><br><span class="line"> <span class="number">1015</span>  <span class="built_in">echo</span> <span class="variable">$</span>&#123;url/ao/AO&#125;</span><br><span class="line"> <span class="number">1017</span>  <span class="built_in">echo</span> <span class="variable">$</span>&#123;url//ao/AO&#125;   贪婪替换</span><br><span class="line"> </span><br><span class="line">替代： - 和 :-  +和:+</span><br><span class="line"> <span class="number">1019</span>  <span class="built_in">echo</span> <span class="variable">$</span>&#123;abc<span class="literal">-123</span>&#125;</span><br><span class="line"> <span class="number">1020</span>  abc=hello</span><br><span class="line"> <span class="number">1021</span>  <span class="built_in">echo</span> <span class="variable">$</span>&#123;abc<span class="literal">-444</span>&#125;</span><br><span class="line"> <span class="number">1022</span>  <span class="built_in">echo</span> <span class="variable">$abc</span></span><br><span class="line"> <span class="number">1024</span>  abc=</span><br><span class="line"> <span class="number">1025</span>  <span class="built_in">echo</span> <span class="variable">$</span>&#123;abc<span class="literal">-222</span>&#125;</span><br><span class="line"></span><br><span class="line"><span class="variable">$</span>&#123;变量名-新的变量值&#125; 或者 <span class="variable">$</span>&#123;变量名=新的变量值&#125;</span><br><span class="line">变量没有被赋值：会使用“新的变量值“ 替代</span><br><span class="line">变量有被赋值（包括空值）： 不会被替代</span><br><span class="line"></span><br><span class="line"> <span class="number">1062</span>  <span class="built_in">echo</span> <span class="variable">$</span>&#123;ABC:<span class="literal">-123</span>&#125;</span><br><span class="line"> <span class="number">1063</span>  ABC=HELLO</span><br><span class="line"> <span class="number">1064</span>  <span class="built_in">echo</span> <span class="variable">$</span>&#123;ABC:<span class="literal">-123</span>&#125;</span><br><span class="line"> <span class="number">1065</span>  ABC=</span><br><span class="line"> <span class="number">1066</span>  <span class="built_in">echo</span> <span class="variable">$</span>&#123;ABC:<span class="literal">-123</span>&#125;</span><br><span class="line"></span><br><span class="line"><span class="variable">$</span>&#123;变量名:-新的变量值&#125; 或者 <span class="variable">$</span>&#123;变量名:=新的变量值&#125;</span><br><span class="line">变量没有被赋值或者赋空值：会使用“新的变量值“ 替代</span><br><span class="line">变量有被赋值： 不会被替代</span><br><span class="line"></span><br><span class="line"> <span class="number">1116</span>  <span class="built_in">echo</span> <span class="variable">$</span>&#123;abc=<span class="number">123</span>&#125;</span><br><span class="line"> <span class="number">1118</span>  <span class="built_in">echo</span> <span class="variable">$</span>&#123;abc:=<span class="number">123</span>&#125;</span><br><span class="line"></span><br><span class="line">[<span class="type">root</span>@<span class="type">MissHou</span> ~]<span class="comment"># unset abc</span></span><br><span class="line">[<span class="type">root</span>@<span class="type">MissHou</span> ~]<span class="comment"># echo $&#123;abc:+123&#125;</span></span><br><span class="line"></span><br><span class="line">[<span class="type">root</span>@<span class="type">MissHou</span> ~]<span class="comment"># abc=hello</span></span><br><span class="line">[<span class="type">root</span>@<span class="type">MissHou</span> ~]<span class="comment"># echo $&#123;abc:+123&#125;</span></span><br><span class="line"><span class="number">123</span></span><br><span class="line">[<span class="type">root</span>@<span class="type">MissHou</span> ~]<span class="comment"># abc=</span></span><br><span class="line">[<span class="type">root</span>@<span class="type">MissHou</span> ~]<span class="comment"># echo $&#123;abc:+123&#125;</span></span><br><span class="line"></span><br><span class="line"><span class="variable">$</span>&#123;变量名+新的变量值&#125;</span><br><span class="line">变量没有被赋值或者赋空值：不会使用“新的变量值“ 替代</span><br><span class="line">变量有被赋值： 会被替代</span><br><span class="line">[<span class="type">root</span>@<span class="type">MissHou</span> ~]<span class="comment"># unset abc</span></span><br><span class="line">[<span class="type">root</span>@<span class="type">MissHou</span> ~]<span class="comment"># echo $&#123;abc+123&#125;</span></span><br><span class="line"></span><br><span class="line">[<span class="type">root</span>@<span class="type">MissHou</span> ~]<span class="comment"># abc=hello</span></span><br><span class="line">[<span class="type">root</span>@<span class="type">MissHou</span> ~]<span class="comment"># echo $&#123;abc+123&#125;</span></span><br><span class="line"><span class="number">123</span></span><br><span class="line">[<span class="type">root</span>@<span class="type">MissHou</span> ~]<span class="comment"># abc=</span></span><br><span class="line">[<span class="type">root</span>@<span class="type">MissHou</span> ~]<span class="comment"># echo $&#123;abc+123&#125;</span></span><br><span class="line"><span class="number">123</span></span><br><span class="line"><span class="variable">$</span>&#123;变量名:+新的变量值&#125;</span><br><span class="line">变量没有被赋值：不会使用“新的变量值“ 替代</span><br><span class="line">变量有被赋值（包括空值）： 会被替代</span><br><span class="line"></span><br><span class="line">[<span class="type">root</span>@<span class="type">MissHou</span> ~]<span class="comment"># unset abc</span></span><br><span class="line">[<span class="type">root</span>@<span class="type">MissHou</span> ~]<span class="comment"># echo $&#123;abc?123&#125;</span></span><br><span class="line"><span class="literal">-bash</span>: abc: <span class="number">123</span></span><br><span class="line"></span><br><span class="line">[<span class="type">root</span>@<span class="type">MissHou</span> ~]<span class="comment"># abc=hello</span></span><br><span class="line">[<span class="type">root</span>@<span class="type">MissHou</span> ~]<span class="comment"># echo $&#123;abc?123&#125;</span></span><br><span class="line">hello</span><br><span class="line">[<span class="type">root</span>@<span class="type">MissHou</span> ~]<span class="comment"># abc=</span></span><br><span class="line">[<span class="type">root</span>@<span class="type">MissHou</span> ~]<span class="comment"># echo $&#123;abc?123&#125;</span></span><br><span class="line"></span><br><span class="line"><span class="variable">$</span>&#123;变量名?新的变量值&#125;</span><br><span class="line">变量没有被赋值:提示错误信息</span><br><span class="line">变量被赋值（包括空值）：不会使用“新的变量值“ 替代</span><br><span class="line"></span><br><span class="line">[<span class="type">root</span>@<span class="type">MissHou</span> ~]<span class="comment"># unset abc</span></span><br><span class="line">[<span class="type">root</span>@<span class="type">MissHou</span> ~]<span class="comment"># echo $&#123;abc:?123&#125;</span></span><br><span class="line"><span class="literal">-bash</span>: abc: <span class="number">123</span></span><br><span class="line">[<span class="type">root</span>@<span class="type">MissHou</span> ~]<span class="comment"># abc=hello</span></span><br><span class="line">[<span class="type">root</span>@<span class="type">MissHou</span> ~]<span class="comment"># echo $&#123;abc:?123&#125;</span></span><br><span class="line">hello</span><br><span class="line">[<span class="type">root</span>@<span class="type">MissHou</span> ~]<span class="comment"># abc=</span></span><br><span class="line">[<span class="type">root</span>@<span class="type">MissHou</span> ~]<span class="comment"># echo $&#123;abc:?123&#125;</span></span><br><span class="line"><span class="literal">-bash</span>: abc: <span class="number">123</span></span><br><span class="line"></span><br><span class="line"><span class="variable">$</span>&#123;变量名:?新的变量值&#125;</span><br><span class="line">变量没有被赋值或者赋空值时:提示错误信息</span><br><span class="line">变量被赋值：不会使用“新的变量值“ 替代</span><br><span class="line"></span><br><span class="line">说明：?主要是当变量没有赋值提示错误信息的，没有赋值功能</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;ul&gt;
&lt;li&gt;&lt;p&gt;① Shell的基本语法结构&lt;/p&gt;
&lt;p&gt;如：变量定义、条件判断、循环语句(for、until、while)、分支语句、函数和数组等； &lt;/p&gt;
&lt;p&gt;② 基本正则表达式的运用;&lt;/p&gt;
&lt;p&gt;③ 文件处理三剑客：grep、sed、awk工具的使用；&lt;/p&gt;
&lt;p&gt;e 使用shell脚本完成一些较复杂的任务，如：服务搭建、批量处理等。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;</summary>
    
    
    
    <category term="shell" scheme="http://example.com/categories/shell/"/>
    
    
  </entry>
  
  <entry>
    <title>Red hat单用户修改密码</title>
    <link href="http://example.com/2020/10/11/centos7%E5%8D%95%E7%94%A8%E6%88%B7%E4%BF%AE%E6%94%B9%E5%AF%86%E7%A0%81/"/>
    <id>http://example.com/2020/10/11/centos7%E5%8D%95%E7%94%A8%E6%88%B7%E4%BF%AE%E6%94%B9%E5%AF%86%E7%A0%81/</id>
    <published>2020-10-11T07:02:42.000Z</published>
    <updated>2020-11-11T08:33:08.137Z</updated>
    
    <content type="html"><![CDATA[<p>忘记root密码这个问题出现的几率是很高的，不过，在linux下解决这个问题也很简单，只需重启linux系统，然后引导进入linux的单用户模式（init1），由于单用户模式是不需要输入登录密码的，因此，可以直接登录系统，修改root密码即可解决问题。</p><a id="more"></a><h3 id="1、进入GRUB页面，选择相应的内核，按下’e’键；-备注：第一行为内核；第二行为援救模式"><a href="#1、进入GRUB页面，选择相应的内核，按下’e’键；-备注：第一行为内核；第二行为援救模式" class="headerlink" title="1、进入GRUB页面，选择相应的内核，按下’e’键；(备注：第一行为内核；第二行为援救模式)"></a>1、进入GRUB页面，选择相应的内核，按下’e’键；(备注：第一行为内核；第二行为援救模式)</h3><img src="/2020/10/11/centos7%E5%8D%95%E7%94%A8%E6%88%B7%E4%BF%AE%E6%94%B9%E5%AF%86%E7%A0%81/1.jpg" class><h3 id="2、进入内核修改信息界面，找到Linux16这一行；"><a href="#2、进入内核修改信息界面，找到Linux16这一行；" class="headerlink" title="2、进入内核修改信息界面，找到Linux16这一行；"></a>2、进入内核修改信息界面，找到Linux16这一行；</h3><img src="/2020/10/11/centos7%E5%8D%95%E7%94%A8%E6%88%B7%E4%BF%AE%E6%94%B9%E5%AF%86%E7%A0%81/3.jpg" class><p>在这一行的末尾加上init=/bin/sh</p><p>按下’Ctrl + x’进入单用户模式</p><img src="/2020/10/11/centos7%E5%8D%95%E7%94%A8%E6%88%B7%E4%BF%AE%E6%94%B9%E5%AF%86%E7%A0%81/4.jpg" class><h3 id="3、进入单用户后，重新挂载根目录，使其可写；"><a href="#3、进入单用户后，重新挂载根目录，使其可写；" class="headerlink" title="3、进入单用户后，重新挂载根目录，使其可写；"></a>3、进入单用户后，重新挂载根目录，使其可写；</h3><p>执行<code>mount -o remount,rw /</code></p><h3 id="4、修改密码-输入两遍"><a href="#4、修改密码-输入两遍" class="headerlink" title="4、修改密码(输入两遍)"></a>4、修改密码(输入两遍)</h3><h3 id="5、当selinux防火墙启动时，修改密码后要创建文件touch-autorelabel"><a href="#5、当selinux防火墙启动时，修改密码后要创建文件touch-autorelabel" class="headerlink" title="5、当selinux防火墙启动时，修改密码后要创建文件touch /.autorelabel"></a>5、当selinux防火墙启动时，修改密码后要创建文件touch /.autorelabel</h3><img src="/2020/10/11/centos7%E5%8D%95%E7%94%A8%E6%88%B7%E4%BF%AE%E6%94%B9%E5%AF%86%E7%A0%81/5.jpg" class><h3 id="6、重启系统"><a href="#6、重启系统" class="headerlink" title="6、重启系统"></a>6、重启系统</h3><img src="/2020/10/11/centos7%E5%8D%95%E7%94%A8%E6%88%B7%E4%BF%AE%E6%94%B9%E5%AF%86%E7%A0%81/5.jpg" class>]]></content>
    
    
    <summary type="html">&lt;p&gt;忘记root密码这个问题出现的几率是很高的，不过，在linux下解决这个问题也很简单，只需重启linux系统，然后引导进入linux的单用户模式（init1），由于单用户模式是不需要输入登录密码的，因此，可以直接登录系统，修改root密码即可解决问题。&lt;/p&gt;</summary>
    
    
    
    
  </entry>
  
  <entry>
    <title>我的第一篇博客文章</title>
    <link href="http://example.com/2020/10/07/%E6%88%91%E7%9A%84%E7%AC%AC%E4%B8%80%E7%AF%87%E5%8D%9A%E5%AE%A2%E6%96%87%E7%AB%A0/"/>
    <id>http://example.com/2020/10/07/%E6%88%91%E7%9A%84%E7%AC%AC%E4%B8%80%E7%AF%87%E5%8D%9A%E5%AE%A2%E6%96%87%E7%AB%A0/</id>
    <published>2020-10-07T11:35:27.000Z</published>
    <updated>2020-11-11T07:10:33.984Z</updated>
    
    
    
    
    
  </entry>
  
</feed>
